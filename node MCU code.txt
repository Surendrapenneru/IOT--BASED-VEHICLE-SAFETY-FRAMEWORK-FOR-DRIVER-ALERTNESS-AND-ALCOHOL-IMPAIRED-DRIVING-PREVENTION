#define BLYNK_TEMPLATE_ID           "TMPL39JgrmdeF"
#define BLYNK_TEMPLATE_NAME         "Quickstart Template"
#define BLYNK_AUTH_TOKEN            "WBx5TZf8I7hPt4BcpmByYIlq74G_jWbH"

/* Comment this out to disable prints and save space */
#define BLYNK_PRINT Serial


#include <ESP8266WiFi.h>
#include <BlynkSimpleEsp8266.h>

// Your WiFi credentials.
// Set password to "" for open networks.
char ssid[] = "iotbt1";
char pass[] = "12345678";
int pin_state = 0;
BlynkTimer timer;





// This function sends Arduino's uptime every second to Virtual Pin 2.
void myTimerEvent()
{
  // You can send any value at any time.
  // Please don't send more that 10 values per second.
  Blynk.virtualWrite(V2, millis() / 1000);
}

void setup()
{
  // Debug console
  Serial.begin(115200);
  pinMode(D1, INPUT_PULLUP);
  Blynk.begin(BLYNK_AUTH_TOKEN, ssid, pass);
  // You can also specify server:
  //Blynk.begin(BLYNK_AUTH_TOKEN, ssid, pass, "blynk.cloud", 80);
  //Blynk.begin(BLYNK_AUTH_TOKEN, ssid, pass, IPAddress(192,168,1,100), 8080);

  // Setup a function to be called every second
  timer.setInterval(1000L, myTimerEvent);
}

void loop()
{
pin_state = digitalRead(D1);
int alch=analogRead(0);
alch = map(alch, 0, 1023, 0, 100);
 Blynk.virtualWrite(V0, alch);
 // Serial.println(alch);
 
   
   
   if(alch>70)
 {
    Blynk.logEvent("alert","HIGH_ALCHOHAL LEVEL_DETECTED : Lat: 16.3510 N, long :81.0426 E");
  }

  if(pin_state==LOW)
  {
   Blynk.logEvent("alert","DROWSINESS_DETECTED : Lat: 16.3510 N, long :81.0426 E"); 
  }
    Blynk.run();
  timer.run();
  delay(1000);
  // You can inject your own code or combine it with other sketches.
  // Check other examples on how to communicate with Blynk. Remember
  // to avoid delay() function!
}